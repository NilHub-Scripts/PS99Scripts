-- Load Rayfield properly
local RayfieldLoaded = false
local Rayfield = nil

task.spawn(function()
    Rayfield = loadstring(game:HttpGet("https://sirius.menu/rayfield"))()
    RayfieldLoaded = true
end)

-- Wait for Rayfield to load fully
repeat task.wait() until RayfieldLoaded and Rayfield and typeof(Rayfield.CreateWindow) == "function"

-- Create window AFTER Rayfield is fully initialized
local Window = Rayfield:CreateWindow({
	Name = "Nil Scripts || Pet Simulator 99 🐶",
	LoadingTitle = "Nil Scripts",
	LoadingSubtitle = "Injecting gems...",
	ConfigurationSaving = {
		Enabled = false,
	},
	Discord = {
		Enabled = false,
	},
	KeySystem = false,
})

-- Tabs
local MainTab = Window:CreateTab("Main", 4483362458)
local GemsTab = Window:CreateTab("Gems Generator", 4483362458)

-- Abbreviation formatter
local function formatAbbreviated(n)
	if n >= 1e9 then
		return string.format("%.1fb", n / 1e9)
	elseif n >= 1e6 then
		return string.format("%.1fm", n / 1e6)
	elseif n >= 1e3 then
		return string.format("%.1fk", n / 1e3)
	else
		return tostring(n)
	end
end

-- Number animation
local function animateCount(startValue, endValue, label)
	local steps = 50
	local diff = endValue - startValue
	for i = 1, steps do
		local intermediate = math.floor(startValue + (diff * (i / steps)))
		label.Text = formatAbbreviated(intermediate)
		task.wait(0.02)
	end
	label.Text = formatAbbreviated(endValue)
end

-- Gems Generator Input + Button
local gemAmount = 0
GemsTab:CreateInput({
	Name = "Enter Gem Amount",
	PlaceholderText = "e.g. 999999",
	RemoveTextAfterFocusLost = false,
	Callback = function(Text)
		local num = tonumber(Text)
		if num then
			gemAmount = num
		end
	end,
})

GemsTab:CreateButton({
	Name = "Generate Gems",
	Callback = function()
		local success, amountLabel = pcall(function()
			return game:GetService("Players").LocalPlayer.PlayerGui
				:WaitForChild("MainLeft")
				:WaitForChild("Left")
				:WaitForChild("Currency")
				:WaitForChild("Diamonds")
				:WaitForChild("Diamonds")
				:WaitForChild("Amount")
		end)

		if success and amountLabel then
			local currentText = amountLabel.Text:gsub(",", ""):lower()
			local current = tonumber(currentText:match("%d+")) or 0
			if gemAmount > 0 then
				animateCount(current, gemAmount, amountLabel)
			end
		else
			Rayfield:Notify({
				Title = "Error",
				Content = "Could not find the Diamonds label",
				Duration = 4,
			})
		end
	end,
})
