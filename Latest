local Rayfield = loadstring(game:HttpGet("https://sirius.menu/rayfield"))()

local Players = game:GetService("Players")
local plr = Players.LocalPlayer

-- Create the Rayfield window
local Window = Rayfield:CreateWindow({
	Name = "Nil Scripts || Pet Simulator 99 🐶",
	LoadingTitle = "Nil Scripts",
	LoadingSubtitle = "Loading...",
	ConfigurationSaving = {
		Enabled = false,
	},
	Discord = {
		Enabled = false,
	},
	KeySystem = false,
})

-- Wait for the Rayfield GUI to finish loading
Rayfield:Load()

-- Now we can create tabs and UI elements
local MainTab = Window:CreateTab("Main")
local GemsTab = Window:CreateTab("Gems Generator", 4483362458)

local gemAmount = 0

-- TextBox
GemsTab:CreateInput({
	Name = "Enter Diamond Amount",
	PlaceholderText = "Type value here",
	RemoveTextAfterFocusLost = false,
	Callback = function(Text)
		local num = tonumber(Text)
		if num then
			gemAmount = num
		end
	end,
})

-- Formatter for abbreviated numbers
local function formatAbbreviated(n)
	if n >= 1e9 then
		return string.format("%.1fb", n / 1e9)
	elseif n >= 1e6 then
		return string.format("%.1fm", n / 1e6)
	elseif n >= 1e3 then
		return string.format("%.1fk", n / 1e3)
	else
		return tostring(n)
	end
end

-- Animate the number change
local function animateCount(startValue, endValue, label)
	local steps = 50
	local diff = endValue - startValue
	for i = 1, steps do
		local intermediate = math.floor(startValue + (diff * (i / steps)))
		label.Text = formatAbbreviated(intermediate)
		task.wait(0.02)
	end
	label.Text = formatAbbreviated(endValue)
end

-- Generate Button
GemsTab:CreateButton({
	Name = "Generate Diamonds",
	Callback = function()
		local diamondsLabel = plr:WaitForChild("PlayerGui")
			:WaitForChild("MainLeft")
			:WaitForChild("Left")
			:WaitForChild("Currency")
			:WaitForChild("Diamonds")
			:WaitForChild("Diamonds")
			:WaitForChild("Amount")

		local currentText = diamondsLabel.Text:gsub(",", ""):lower()
		local current = tonumber(currentText:match("%d+")) or 0

		if gemAmount and gemAmount > 0 then
			animateCount(current, gemAmount, diamondsLabel)
		else
			Rayfield:Notify({
				Title = "Invalid Input",
				Content = "Please enter a valid number.",
				Duration = 4,
			})
		end
	end,
})
