-- Load Rayfield
local Rayfield = loadstring(game:HttpGet("https://sirius.menu/rayfield"))()

-- Wait until Rayfield is fully loaded
repeat task.wait() until Rayfield and Rayfield.CreateWindow

-- Services
local Players = game:GetService("Players")
local plr = Players.LocalPlayer

-- Formatter
local function formatAbbreviated(n)
	if n >= 1e9 then
		local num = n / 1e9
		return (num % 1 == 0) and (tostring(num):match("^%d+") .. "b") or (string.format("%.1f", num) .. "b")
	elseif n >= 1e6 then
		local num = n / 1e6
		return (num % 1 == 0) and (tostring(num):match("^%d+") .. "m") or (string.format("%.1f", num) .. "m")
	elseif n >= 1e3 then
		local num = n / 1e3
		return (num % 1 == 0) and (tostring(num):match("^%d+") .. "k") or (string.format("%.1f", num) .. "k")
	else
		return tostring(n)
	end
end

local function animateCount(startValue, endValue, label)
	local steps = 50
	local diff = endValue - startValue
	for i = 1, steps do
		local intermediate = math.floor(startValue + (diff * (i / steps)))
		label.Text = formatAbbreviated(intermediate)
		task.wait(0.02)
	end
	label.Text = formatAbbreviated(endValue)
end

-- Create GUI
local Window = Rayfield:CreateWindow({
	Name = "Nil Scripts || Pet Simulator 99 üê∂",
	LoadingTitle = "Nil Scripts Loader",
	LoadingSubtitle = "by You",
	ConfigurationSaving = {
		Enabled = false
	},
	Discord = {
		Enabled = false
	},
	KeySystem = false,
})

-- Tabs
local MainTab = Window:CreateTab("Main", 4483362458)
local GemsTab = Window:CreateTab("üíé Gems Generator", 4483362458)

-- Gems Generator UI
local Input = ""
GemsTab:CreateInput({
	Name = "Enter Gem Amount",
	PlaceholderText = "e.g. 5000000",
	RemoveTextAfterFocusLost = false,
	Callback = function(Value)
		Input = Value
	end,
})

GemsTab:CreateButton({
	Name = "Generate Gems",
	Callback = function()
		local amount = tonumber(Input)
		if not amount then
			Rayfield:Notify({
				Title = "Error",
				Content = "Enter a valid number.",
				Duration = 4,
			})
			return
		end

		local success, result = pcall(function()
			return plr:WaitForChild("PlayerGui")
				:WaitForChild("MainLeft")
				:WaitForChild("Left")
				:WaitForChild("Currency")
				:WaitForChild("Diamonds")
				:WaitForChild("Diamonds")
				:WaitForChild("Amount")
		end)

		if success and result and result:IsA("TextLabel") then
			local currentText = result.Text:gsub(",", ""):lower()
			local current = tonumber(currentText:match("%d+")) or 0
			animateCount(current, amount, result)
		else
			Rayfield:Notify({
				Title = "Error",
				Content = "Couldn't find the Diamonds label.",
				Duration = 5,
			})
		end
	end,
})
